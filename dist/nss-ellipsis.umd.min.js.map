{"version":3,"sources":["webpack://NSSEllipsis/webpack/universalModuleDefinition","webpack://NSSEllipsis/webpack/bootstrap","webpack://NSSEllipsis/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","NSSEllipsis","element","lineMax","arguments","length","undefined","_precision","_text","WORD_PRECISION","LETTER_PRECISION","txt","innerHTML","replace","split","textInit","lastHeight","parseInt","getBoundingClientRect","height","lineHeight","currHeight","changeCount","index","prevText","tempText","substring","ar","changeCount2"],"mappings":"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","file":"nss-ellipsis.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NSSEllipsis\"] = factory();\n\telse\n\t\troot[\"NSSEllipsis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class NSSEllipsis {\r\n  static update(element, lineMax = 2, _precision = ' ', _text = null) {\r\n    if (_precision !== NSSEllipsis.WORD_PRECISION && _precision !== NSSEllipsis.LETTER_PRECISION) {\r\n      _precision = NSSEllipsis.WORD_PRECISION\r\n    }\r\n    _text =  (_text != null) ? _text : element.innerHTML\r\n    const txt = _text.replace(/(\\r\\n\\t|\\n|\\r\\t)/gm,\" \").replace(/  +/g, ' ').split(_precision)\r\n    if (element.textInit == undefined) {\r\n      element.textInit = txt\r\n    }\r\n    let lastHeight = parseInt(element.getBoundingClientRect().height)\r\n    element.innerHTML = 'a'\r\n    const lineHeight = parseInt(element.getBoundingClientRect().height)\r\n    if(lastHeight <= lineHeight * lineMax){\r\n      element.innerHTML = _text\r\n      // console.log('no need to use ellipsis here', _text)\r\n      return\r\n    }\r\n    element.innerHTML = ''\r\n    let changeCount = 0\r\n    let index = 0\r\n    lastHeight = 0\r\n    let currHeight\r\n    let prevText = ''\r\n    let tempText = ''\r\n    while (changeCount < lineMax + 1) {\r\n      prevText = element.innerHTML\r\n      element.innerHTML += element.textInit[index] + _precision\r\n      //console.log(element.innerHTML)\r\n      tempText = element.innerHTML\r\n      element.innerHTML = tempText.substring(0, tempText.length-1)\r\n      element.innerHTML = element.innerHTML.replace(/\\s+$/, '') + '...'\r\n      currHeight = parseInt(element.getBoundingClientRect().height)\r\n\r\n      element.innerHTML = tempText\r\n      if (currHeight !== lastHeight) {\r\n        lastHeight = currHeight\r\n        changeCount = parseInt(currHeight / lineHeight)\r\n        if (changeCount > lineMax) {\r\n          element.innerHTML = prevText.substring(0, prevText.length-1)\r\n          element.innerHTML = element.innerHTML.replace(/\\s+$/, '') + '...'\r\n          lastHeight = currHeight\r\n          currHeight = parseInt(element.getBoundingClientRect().height)\r\n          // if adding ... add a new line\r\n          if(currHeight !== lastHeight) {\r\n            const ar = prevText.split(_precision)\r\n            element.innerHTML= ''\r\n            let changeCount2 = 0\r\n            lastHeight = 0\r\n            for(let i = 0; i < ar.length-1; i++) {\r\n              prevText = element.innerHTML\r\n              element.innerHTML += ar[i] + _precision\r\n              currHeight = parseInt(element.getBoundingClientRect().height)\r\n              if (currHeight !== lastHeight) {\r\n                changeCount2 ++\r\n              }\r\n              lastHeight = currHeight\r\n              if (changeCount2 > lineMax+1) {\r\n                element.innerHTML = prevText\r\n              }\r\n            }\r\n            prevText = element.innerHTML\r\n            currHeight = parseInt(element.getBoundingClientRect().height)\r\n            element.innerHTML = prevText.substring(0, prevText.length-1)\r\n            element.innerHTML = element.innerHTML.replace(/\\s+$/, '') + '...'\r\n            if (currHeight !== parseInt(element.getBoundingClientRect().height) && changeCount2 > lineMax-1) {\r\n              element.innerHTML = prevText\r\n            }\r\n          }\r\n        }\r\n      }\r\n      index ++\r\n      if (index > element.textInit.length-1) {\r\n        changeCount = lineMax + 2\r\n      }\r\n    }\r\n  }\r\n}\r\nNSSEllipsis.WORD_PRECISION = ' '\r\nNSSEllipsis.LETTER_PRECISION = ''\r\nexport default NSSEllipsis"],"sourceRoot":""}