{"version":3,"sources":["webpack://NSSEllipsis/webpack/universalModuleDefinition","webpack://NSSEllipsis/webpack/bootstrap","webpack://NSSEllipsis/./src/index.js"],"names":["NSSEllipsis","element","lineMax","_precision","_text","WORD_PRECISION","LETTER_PRECISION","innerHTML","txt","replace","split","textInit","undefined","lineHeight","parseInt","getBoundingClientRect","height","changeCount","index","lastHeight","currHeight","prevText","tempText","substring","length","ar","changeCount2","i"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;IClFMA,W;;;;;;;;;2BACUC,O,EAAsD;AAAA,UAA7CC,OAA6C,uEAAnC,CAAmC;;AAAA,UAAhCC,UAAgC,uEAAnB,GAAmB;;AAAA,UAAdC,KAAc,uEAAN,IAAM;;AAClE,UAAID,UAAU,KAAKH,WAAW,CAACK,cAA3B,IAA6CF,UAAU,KAAKH,WAAW,CAACM,gBAA5E,EAA8F;AAC5FH,kBAAU,GAAGH,WAAW,CAACK,cAAzB;AACD;;AACDD,WAAK,GAAKA,KAAK,IAAI,IAAV,GAAkBA,KAAlB,GAA0BH,OAAO,CAACM,SAA3C;;AACA,UAAMC,GAAG,GAAGJ,KAAK,CAACK,OAAN,CAAc,oBAAd,EAAmC,GAAnC,EAAwCA,OAAxC,CAAgD,MAAhD,EAAwD,GAAxD,EAA6DC,KAA7D,CAAmEP,UAAnE,CAAZ;;AACA,UAAIF,OAAO,CAACU,QAAR,IAAoBC,SAAxB,EAAmC;AACjCX,eAAO,CAACU,QAAR,GAAmBH,GAAnB;AACD;;AACDP,aAAO,CAACM,SAAR,GAAoB,GAApB;AACA,UAAMM,UAAU,GAAGC,QAAQ,CAACb,OAAO,CAACc,qBAAR,GAAgCC,MAAjC,CAA3B;AACAf,aAAO,CAACM,SAAR,GAAoB,EAApB;AACA,UAAIU,WAAW,GAAG,CAAlB;AACA,UAAIC,KAAK,GAAG,CAAZ;AACA,UAAIC,UAAU,GAAG,CAAjB;AACA,UAAIC,UAAJ;AACA,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,QAAQ,GAAG,EAAf;;AACA,aAAOL,WAAW,GAAGf,OAAO,GAAG,CAA/B,EAAkC;AAChCmB,gBAAQ,GAAGpB,OAAO,CAACM,SAAnB;AACAN,eAAO,CAACM,SAAR,IAAqBN,OAAO,CAACU,QAAR,CAAiBO,KAAjB,IAA0Bf,UAA/C,CAFgC,CAGhC;;AACAmB,gBAAQ,GAAGrB,OAAO,CAACM,SAAnB;AACAN,eAAO,CAACM,SAAR,GAAoBe,QAAQ,CAACC,SAAT,CAAmB,CAAnB,EAAsBD,QAAQ,CAACE,MAAT,GAAgB,CAAtC,CAApB;AACAvB,eAAO,CAACM,SAAR,GAAoBN,OAAO,CAACM,SAAR,CAAkBE,OAAlB,CAA0B,MAA1B,EAAkC,EAAlC,IAAwC,KAA5D;AACAW,kBAAU,GAAGN,QAAQ,CAACb,OAAO,CAACc,qBAAR,GAAgCC,MAAjC,CAArB;AAEAf,eAAO,CAACM,SAAR,GAAoBe,QAApB;;AACA,YAAIF,UAAU,KAAKD,UAAnB,EAA+B;AAC7BA,oBAAU,GAAGC,UAAb;AACAH,qBAAW,GAAGH,QAAQ,CAACM,UAAU,GAAGP,UAAd,CAAtB;;AACA,cAAII,WAAW,GAAGf,OAAlB,EAA2B;AACzBD,mBAAO,CAACM,SAAR,GAAoBc,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsBF,QAAQ,CAACG,MAAT,GAAgB,CAAtC,CAApB;AACAvB,mBAAO,CAACM,SAAR,GAAoBN,OAAO,CAACM,SAAR,CAAkBE,OAAlB,CAA0B,MAA1B,EAAkC,EAAlC,IAAwC,KAA5D;AACAU,sBAAU,GAAGC,UAAb;AACAA,sBAAU,GAAGN,QAAQ,CAACb,OAAO,CAACc,qBAAR,GAAgCC,MAAjC,CAArB,CAJyB,CAKzB;;AACA,gBAAGI,UAAU,KAAKD,UAAlB,EAA8B;AAC5B,kBAAMM,EAAE,GAAGJ,QAAQ,CAACX,KAAT,CAAeP,UAAf,CAAX;AACAF,qBAAO,CAACM,SAAR,GAAmB,EAAnB;AACA,kBAAImB,YAAY,GAAG,CAAnB;AACAP,wBAAU,GAAG,CAAb;;AACA,mBAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,EAAE,CAACD,MAAH,GAAU,CAA7B,EAAgCG,CAAC,EAAjC,EAAqC;AACnCN,wBAAQ,GAAGpB,OAAO,CAACM,SAAnB;AACAN,uBAAO,CAACM,SAAR,IAAqBkB,EAAE,CAACE,CAAD,CAAF,GAAQxB,UAA7B;AACAiB,0BAAU,GAAGN,QAAQ,CAACb,OAAO,CAACc,qBAAR,GAAgCC,MAAjC,CAArB;;AACA,oBAAII,UAAU,KAAKD,UAAnB,EAA+B;AAC7BO,8BAAY;AACb;;AACDP,0BAAU,GAAGC,UAAb;;AACA,oBAAIM,YAAY,GAAGxB,OAAO,GAAC,CAA3B,EAA8B;AAC5BD,yBAAO,CAACM,SAAR,GAAoBc,QAApB;AACD;AACF;;AACDA,sBAAQ,GAAGpB,OAAO,CAACM,SAAnB;AACAa,wBAAU,GAAGN,QAAQ,CAACb,OAAO,CAACc,qBAAR,GAAgCC,MAAjC,CAArB;AACAf,qBAAO,CAACM,SAAR,GAAoBc,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsBF,QAAQ,CAACG,MAAT,GAAgB,CAAtC,CAApB;AACAvB,qBAAO,CAACM,SAAR,GAAoBN,OAAO,CAACM,SAAR,CAAkBE,OAAlB,CAA0B,MAA1B,EAAkC,EAAlC,IAAwC,KAA5D;;AACA,kBAAIW,UAAU,KAAKN,QAAQ,CAACb,OAAO,CAACc,qBAAR,GAAgCC,MAAjC,CAAvB,IAAmEU,YAAY,GAAGxB,OAAO,GAAC,CAA9F,EAAiG;AAC/FD,uBAAO,CAACM,SAAR,GAAoBc,QAApB;AACD;AACF;AACF;AACF;;AACDH,aAAK;;AACL,YAAIA,KAAK,GAAGjB,OAAO,CAACU,QAAR,CAAiBa,MAAjB,GAAwB,CAApC,EAAuC;AACrCP,qBAAW,GAAGf,OAAO,GAAG,CAAxB;AACD;AACF;AACF;;;;;;AAEHF,WAAW,CAACK,cAAZ,GAA6B,GAA7B;AACAL,WAAW,CAACM,gBAAZ,GAA+B,EAA/B;AACeN,0EAAf,E","file":"nss-ellipsis.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NSSEllipsis\"] = factory();\n\telse\n\t\troot[\"NSSEllipsis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class NSSEllipsis {\r\n  static update(element, lineMax = 2, _precision = ' ', _text = null) {\r\n    if (_precision !== NSSEllipsis.WORD_PRECISION && _precision !== NSSEllipsis.LETTER_PRECISION) {\r\n      _precision = NSSEllipsis.WORD_PRECISION\r\n    }\r\n    _text =  (_text != null) ? _text : element.innerHTML\r\n    const txt = _text.replace(/(\\r\\n\\t|\\n|\\r\\t)/gm,\" \").replace(/  +/g, ' ').split(_precision)\r\n    if (element.textInit == undefined) {\r\n      element.textInit = txt\r\n    }\r\n    element.innerHTML = 'a'\r\n    const lineHeight = parseInt(element.getBoundingClientRect().height)\r\n    element.innerHTML = ''\r\n    let changeCount = 0\r\n    let index = 0\r\n    let lastHeight = 0\r\n    let currHeight\r\n    let prevText = ''\r\n    let tempText = ''\r\n    while (changeCount < lineMax + 1) {\r\n      prevText = element.innerHTML\r\n      element.innerHTML += element.textInit[index] + _precision\r\n      //console.log(element.innerHTML)\r\n      tempText = element.innerHTML\r\n      element.innerHTML = tempText.substring(0, tempText.length-1)\r\n      element.innerHTML = element.innerHTML.replace(/\\s+$/, '') + '...'\r\n      currHeight = parseInt(element.getBoundingClientRect().height)\r\n\r\n      element.innerHTML = tempText\r\n      if (currHeight !== lastHeight) {\r\n        lastHeight = currHeight\r\n        changeCount = parseInt(currHeight / lineHeight)\r\n        if (changeCount > lineMax) {\r\n          element.innerHTML = prevText.substring(0, prevText.length-1)\r\n          element.innerHTML = element.innerHTML.replace(/\\s+$/, '') + '...'\r\n          lastHeight = currHeight\r\n          currHeight = parseInt(element.getBoundingClientRect().height)\r\n          // if adding ... add a new line\r\n          if(currHeight !== lastHeight) {\r\n            const ar = prevText.split(_precision)\r\n            element.innerHTML= ''\r\n            let changeCount2 = 0\r\n            lastHeight = 0\r\n            for(let i = 0; i < ar.length-1; i++) {\r\n              prevText = element.innerHTML\r\n              element.innerHTML += ar[i] + _precision\r\n              currHeight = parseInt(element.getBoundingClientRect().height)\r\n              if (currHeight !== lastHeight) {\r\n                changeCount2 ++\r\n              }\r\n              lastHeight = currHeight\r\n              if (changeCount2 > lineMax+1) {\r\n                element.innerHTML = prevText\r\n              }\r\n            }\r\n            prevText = element.innerHTML\r\n            currHeight = parseInt(element.getBoundingClientRect().height)\r\n            element.innerHTML = prevText.substring(0, prevText.length-1)\r\n            element.innerHTML = element.innerHTML.replace(/\\s+$/, '') + '...'\r\n            if (currHeight !== parseInt(element.getBoundingClientRect().height) && changeCount2 > lineMax-1) {\r\n              element.innerHTML = prevText\r\n            }\r\n          }\r\n        }\r\n      }\r\n      index ++\r\n      if (index > element.textInit.length-1) {\r\n        changeCount = lineMax + 2\r\n      }\r\n    }\r\n  }\r\n}\r\nNSSEllipsis.WORD_PRECISION = ' '\r\nNSSEllipsis.LETTER_PRECISION = ''\r\nexport default NSSEllipsis"],"sourceRoot":""}